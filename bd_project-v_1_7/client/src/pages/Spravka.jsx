import Row from "react-bootstrap/Row";
import Col from "react-bootstrap/Col";

const Spravka = () => {
  return (
    <>
      <Row className="mt-2 row justify-content-center">
        <Col md={9}> <div>
          <p>Аннотация</p>
          <p>Апкелямов Э.И. Разработка базы данных для университета   
В курсовом проекте рассмотрена информационная система управления университетом, для автоматизации и улучшения анализа обучения в условиях нынешнего развития современного мира. Предоставлен анализ необходимости внедрения современных информационных систем университета. Для построения работы университета была выбрана наиболее подходящая среда PostgreSQL.
Ключевые слова: PostgreSQL, База данных, автоматизация, программный продукт, университет.</p>
 
<p>Apkelyamov E.I. Development of a database for the university
In the course project, the information management system of the university is considered, for automating and improving the analysis of learning in the conditions of the current development of the modern world. The analysis of the need for the introduction of modern information systems of the university is provided. The most suitable PostgreSQL environment was chosen to build the university's work. 
Keywords: PostgreSQL, Database, automation, software product, university.</p>

<p>Содержание</p>
  
 
 
 
 
 
 
  



 <p>ВВЕДЕНИЕ</p>
 <p>Актуальность темы.</p>
 <p> Актуальность автоматизации базы данных университета заключается в необходимости обеспечения более эффективного и удобного управления информацией о студентах, преподавателях, учебных планах, расписаниях и других аспектах, связанных с учебным процессом.
Автоматизация базы данных университета может привести к следующим преимуществам:</p>
 <p>Улучшение качества обучения и повышение его эффективности. Благодаря автоматизации учебных планов и расписаний, преподаватели могут лучше ориентироваться в учебном процессе, а студенты могут получать более точную информацию о своих учебных планах и сроках сдачи работ.</p>
 <p>Ускорение процесса управления университетом. Автоматизация базы данных позволяет быстро находить необходимые данные и производить операции с ними, такие как изменение информации о студентах и преподавателях, создание расписаний и т.д.
</p>
 <p>Упрощение взаимодействия между участниками учебного процесса. Автоматизация позволяет студентам и преподавателям легко обмениваться информацией и взаимодействовать через специальные системы электронной почты и сообщения.
</p>
 <p>Улучшение контроля и обеспечение безопасности. Автоматизация базы данных позволяет лучше контролировать доступ к информации и предотвращать возможность ее утери или несанкционированного распространения.
</p>
 <p>Таким образом, автоматизация базы данных университета имеет большую актуальность и может привести к улучшению качества обучения, упрощению управления университетом и повышению безопасности информации.
</p>
 <p>Целью курсового проекта является – разработка базы данных для университета.
</p>
 <p>Для достижения поставленной цели были выработаны следующие задачи:</p>
 <p>1. Изучить литературу по данный теме, проанализировать предметную область, составить ER-диаграммы, ER-модель и сделать нормализацию данных.</p>
 <p>2. Сделать обзор систем управления базами данных и аргументировать выбор одной из них.</p>
 <p>3. Разработать проект базы данных и создать в нем объекты БД.
</p>
 <p>4. Разработать таблицы, запросы, формы, отчёты, обосновав их создание.
</p>
 <p>5. Обеспечить защиту от несанкционированного доступа и определить условие целостности базы данных.
</p>
 <p>6. Создать главное меню приложения, а также создать программную оболочку управления базой данных.
</p>
 <p>7. Разработать справочную систему БД, а также создать инсталляционный пакет для готового приложения.
</p>
 <p>Объектом курсового проекта является деятельность университета. А именно взаимодействие персонала, студентов, преподавателей и дисциплин.
</p>
 <p>Предметом курсового проекта – технология разработки автоматизированной базы данных для университета.
</p>
 <p>Структура и объем курсового проекта.</p>
 <p> Курсовой проект состоит из введения, двух глав, заключения, списка использованных источников и приложений. Объём основной части составляет 42 страницы, в том числе 32 рисунков и 14 страниц листинга.
</p>
 <p>Общий объем текстовой части курсового проекта составляет 27 страниц.
</p>
 <p>Во введении описывается и аргументируется актуальность темы, исследуются объект и предмет работы, также проводится анализ среды разработки.
</p>
 <p>В первой главе рассматривается и анализируется деятельность предприятия, а также её структуры: информационная, организационная и функциональная.
</p>
 <p>Во второй главе подробно описывается разработка информационной системы для загса.
</p>
 <p>В заключении кратко выделены результаты проделанной работы и итоги курсового проекта. Определена финальная версия конфигурации и выделены её возможности, преимущества и функционал.
</p>
 <p></p>
 <p>Глава 1. ТЕОРЕТИЧЕСКИЕ АСПЕКТЫ В ОБЛАСТИ РАЗРАБОТКИ БАЗ ДАННЫХ
</p>
 <p>1.1 Основная терминология теории баз данных
</p>
 <p>Базы данных (БД) – это один или несколько файлов данных, предназначенных для хранения, изменения и обработки взаимосвязанной информации.
</p>
 <p>База данных в ПК представлена разработчику в виде таблиц, в которых храниться информация, где имена столбцов являются именами полей, а поля являются хранилищем информации.
</p>
 <p>Банк данных (БнД) – это система специально организованных данных, программных, языков, организационных и технических средств, предназначенных для централизованного накопления и коллективного многоцелевого использования данных.
</p>
 <p>Данные – это информация, которая представлено в определенном виде.
</p>
 <p>Управление базой данных осуществляется с помощью СУБД.
</p>
 <p>Система управления базами данных (СУБД) – это комплекс программных и языковых средств, необходимых для создания баз данных, поддержания их в актуальном состоянии и организации поиска в них необходимой информации.
</p>
 <p>В БД существует ряд основных объектов. К ним относят сущность(объект), атрибут, таблица, связи и т.д.
</p>
 <p>Сущности (entities) – это элементы реального мира, которые могут существовать независимо. Представленный экземпляр можно выделить как сущность, потому что все элементы одной сущности имеют одинаковые признаки и правила поведения.
</p>
 <p>Атрибуты (Attributes) – свойство, которым обладают все экземпляры сущности важным понятием является ключевой атрибут – такой атрибут или несколько атрибутов, которые уникальным образом идентифицирует каждый экземпляр сущности.
</p>
 <p>Таблица – это объект БД, который хранит в себе данные. Таблица содержит столбцы(поля) и строки (записи). В полях хранятся данные, а строки содержат всю информацию о конкретном объекте.
</p>
 <p>Под целостностью БД понимают правильность и непротиворечивость ее содержимого. Нарушение целостности может быть вызвано, например, ошибками и сбоями, так как в этом случае система не в состоянии обеспечить нормальную обработку или выдачу правильных данных.
</p>
 <p>Между объектами базы данных должна существовать связь. Связи – это соединение между двумя и большим числом множеств сущностей.
</p>
 <p>Таблицы могут быть связанны между собой следующими типами отношений: «один-к-одному», «один-ко-многим» и «многие-ко-многим». Отношение «один-к-одному» означает, что одна запись из данной таблице будет соответствовать лишь одной записи в другой таблице, которая связана с ней. Отношение «многие-ко-многим» предусматривает, что запись из одной таблицы будет соответствовать многим записям в другой таблице, связанной с ней. Отношение «многие-ко-многим» является такой связью, при которой многие записи из одной таблицы соответствуют многим записям в другой таблице.
</p>
 <p>При работе в СУБД существует возможность менять структуру созданных таблиц, создавать связь между таблицами и удалять их, редактировать, осуществлять замену, добавлять и удалять записи, производить поиск данных и т.п.
</p>
 <p>1.2 Анализ предметной области
</p>
 <p>Анализ предметной области баз данных университета позволяет определить основные сущности, связи между ними и требования к хранению и обработке данных. Рассмотрим некоторые из них:
</p>
 <p>Студенты: в базе данных университета должна храниться информация о каждом студенте, включая его персональные данные, контактную информацию, учебные планы, сданные экзамены, пройденные курсы и даты сдачи работ. Также может быть информация о финансовой помощи, которую студент получает.
</p>
 <p>Преподаватели: база данных должна содержать информацию о каждом преподавателе, включая его персональные данные, контактную информацию, учебные планы, пройденные курсы, информацию о научной работе и другие важные данные.
</p>
 <p>Учебные планы и курсы: информация о планах обучения и курсах, которые предлагаются в университете, должна храниться в базе данных. Это позволяет преподавателям лучше ориентироваться в учебном процессе и помогает студентам выбирать курсы, соответствующие их интересам и целям.
</p>
 <p>Расписание занятий: база данных должна хранить информацию о расписании занятий, чтобы преподаватели и студенты могли легко ориентироваться в учебном процессе и избежать конфликтов в расписании. Финансы и бухгалтерия: база данных должна содержать информацию о финансовых операциях университета, включая данные о платежах, стипендиях, грантах и других формах финансовой помощи.
</p>
 <p>Библиотека: база данных должна хранить информацию о книгах, журналах и других материалах, доступных в библиотеке университета. Это помогает студентам и преподавателям находить необходимую литературу и следить за ее наличием.
</p>
<p>События: база данных должна хранить информацию о различных мероприятиях, которые проходят в университете, таких как конференции, семинары, спортивные соревнования и т.д.
</p>
<p>1.3 Инфологическое проектирование
</p>
<p>Сущности: 
</p>
<p>Студенты
</p>
<p>Преподаватели</p>
<p>Курсы</p>
<p>Факультеты</p>
<p>Группы</p>
<p>Связи между сущностями:
</p>
<p>Студенты записываются на курсы, преподаваемые преподавателями.
</p>
<p>Преподаватели преподают курсы, принадлежащие к факультету.
</p>
<p>Студенты могут быть организованы в группы на основе курсов, на которые они записываются.
</p>
<p>Преподаватели могут принадлежать к определенному факультету.
</p>
<p>Атрибуты сущностей:
</p>
<p>Студенты: 
</p>
<p>ФИО
</p>
<p>Адрес</p>
<p>Номер телефона
</p>

<p>Еmail</p>
<p>Преподаватели:</p>
<p>ФИО</p>
<p>Адрес</p>
<p>Номер телефона</p>
<p>Еmail</p>
<p>Курсы:</p>
<p>Название</p>
<p>Описание</p>
<p>Количество часов</p>
<p>Факультеты:</p>
<p>Название</p>
<p>Адрес</p>
<p>Декан</p>
<p>Группы:</p>
<p>Название</p>
<p>Количество студентов</p>
<p>Курс</p>
<p>Ключи сущностей:</p>
<p>Студенты: номер</p>
<p>Преподаватели: номер</p>
<p>Курсы: уникальный идентификатор курса</p>
<p>Факультеты: уникальный идентификатор факультета</p>
<p>Группы: уникальный идентификатор группы</p>
<p>Внешние ключи:</p>
<p>Студенты: внешний ключ на группы, в которых они учатся.</p>
<p>Преподаватели: внешний ключ на факультет, к которому они принадлежат.</p>
<p>Курсы: внешний ключ на преподавателя, который преподает курс, и на группы студентов, которые записались на курс.</p>
<p>Факультеты: внешний ключ на преподавателей, которые работают на этом факультете.</p>
<p>Группы: внешний ключ на курс, на котором учится группа, и на студентов, которые входят в эту группу.</p>
<p>1.4 Логическое проектирование</p>
<p>Таблица "студенты"</p>
<p>ID_студента (ключ)</p>
<p>Имя</p>
<p>Фамилия</p>
<p>Пол</p>
<p>Адрес</p>
<p>Телефон</p>
<p>E-mail</p>
<p>Таблица "преподаватели"</p>
<p>ID_преподавателя (ключ)</p>
<p>Имя</p>
<p>Фамилия</p>
<p>Пол</p>
<p>Адрес</p>
<p>Телефон</p>
<p>E-mail</p>
<p>Таблица "факультеты"</p>
<p>ID_факультета (ключ)</p>
<p>Название факультета</p>
<p>Таблица "курсы"</p>
<p>ID_курса (ключ)</p>
<p>Название курса</p>
<p>Описание курса</p>
<p>Количество часов</p>
<p>Факультет (внешний ключ)</p>
<p>Таблица "группы"</p>
<p>ID_группы (ключ)</p>
<p>Название группы</p>
<p>Курс (внешний ключ)</p>
<p>Преподаватель (внешний ключ)</p>
<p>1.5 Обзор систем управления базами данных</p>
<p>Система управления базами данных (СУБД) - это программа, которая позволяет пользователям создавать, хранить, изменять и извлекать данные из базы данных. Существует множество СУБД, каждая из которых имеет свои преимущества и недостатки. Ниже приведен краткий обзор некоторых из наиболее распространенных СУБД:</p>
<p>Oracle Database - одна из самых популярных коммерческих СУБД, которая широко используется в предприятиях и государственных учреждениях. Oracle поддерживает широкий диапазон функций, включая масштабируемость, высокую доступность и безопасность. Microsoft SQL Server - коммерческая СУБД от Microsoft, которая используется в основном на платформе Windows. Она обеспечивает масштабируемость, высокую доступность и хорошую производительность, а также интегрируется с другими продуктами Microsoft, такими как Excel и SharePoint.</p>
<p>PostgreSQL - свободно распространяемая реляционная СУБД, которая широко используется в Интернете, особенно в веб-приложениях. PostgreSQL обладает хорошей производительностью, надежностью и масштабируемостью, а также имеет широкое сообщество пользователей и разработчиков.</p>
<p>MongoDB - документоориентированная СУБД, которая использует JSON-подобный формат для хранения данных. Она обеспечивает высокую производительность, гибкость и масштабируемость, а также имеет хорошую поддержку для геопространственных данных.</p>
<p>Я выбираю MySql, по ряду причин, которые опишу ниже:</p>
<p>Бесплатность: PostgreSQL является бесплатной и свободно распространяемой СУБД. Это позволяет использовать ее без необходимости покупки дорогостоящих лицензий, что особенно актуально для организаций с ограниченным бюджетом, таких как университеты.</p>
<p>Простота использования: PostgreSQL имеет простой и интуитивно понятный интерфейс, который позволяет пользователям создавать, изменять и извлекать данные без необходимости обладать специальными знаниями в области баз данных.</p>
<p>Высокая производительность: PostgreSQL обладает хорошей производительностью и масштабируемостью, что позволяет ей обрабатывать большие объемы данных. Кроме того, PostgreSQL поддерживает кэширование данных, что также способствует ускорению работы с базой данных.</p>
<p>Надежность: PostgreSQL имеет хорошую репутацию в области надежности и безопасности. Благодаря своей популярности, PostgreSQL обладает большим сообществом пользователей и разработчиков, которые постоянно работают над улучшением и обновлением СУБД.
Хорошая поддержка: PostgreSQL имеет хорошую документацию и широкий набор инструментов, которые облегчают работу с базой данных. Кроме того, существует множество сторонних инструментов.  </p>


</div></Col></Row>
    </>
  );
};

export { Spravka };
